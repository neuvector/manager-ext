{"version":3,"file":"neuvector-ui-ext-2.1.3.umd.min.590.js","mappings":"wQAIOA,eAAeC,EAAeC,GACnC,GAAgD,IAA5CA,EAAMC,QAAQ,mBAAmBC,OAAc,OAC3CC,EAAAA,EAAAA,IAAiBH,GACvB,IAAII,QAAgBC,EAAAA,EAAAA,KACpBL,EAAMM,SAAS,wBAAyBC,EAA6BH,EAAQI,KAAKC,O,CAEtF,CAEA,SAASF,EAA6BE,GACpC,IAAIC,EAAS,IAAIC,IASjB,OARAF,EAAMG,SAAQC,IACZC,OAAOC,OAAOF,EAAKG,YAAYJ,SAASK,IACtCA,EAAWL,SAASM,IAChBR,EAAOS,IAAID,EAAgBE,GAAIP,EAAK,GACtC,IAEJH,EAAOS,IAAIN,EAAKQ,KAAMR,EAAK,IAEtBH,CACT,C,6OCkCIY,EAAAA,EAAAA,oBASM,YARyBC,EAAAC,iBAAmBD,EAAAC,gBAAgBtB,OAAS,IAAH,kBAApEuB,EAAAA,EAAAA,aAAkKC,EAAA,C,MAAvFF,gBAAiBD,EAAAC,gBAAkBG,YAAaJ,EAAAK,iB,+DAC3HN,EAAAA,EAAAA,oBAMM,MAAAO,EAAA,EALJC,EAAAA,EAAAA,aAIEC,EAAA,CAHAC,MAAM,yBACNC,MAAM,UACLC,MAAOC,EAAAC,EAAE,oB,+EAzDlB,GACIC,WAAY,CACRC,OAAM,IACNC,oBAAmBA,EAAAA,GAEvBC,MAAO,CACH3B,KAAMC,OACN2B,aAAcC,SAElB,WAAMC,GACF,IACIC,EAAQC,IAAI,8BAA+BC,KAAKjC,MAChD,IAAIkC,EAAS,GACb,GAAID,KAAKjC,KACLkC,EAASD,KAAKjC,KAAKmC,KACnBF,KAAKlB,gBAAkBkB,KAAKjC,KAAKoC,OAC9B,CACH,IAAIC,EAAUJ,KAAKK,OAAOlD,QAAQ,mBAC7BiD,GAA8B,IAAnBA,EAAQhD,eACdH,EAAAA,EAAAA,GAAe+C,KAAKK,QAC1BD,EAAUJ,KAAKK,OAAOlD,QAAQ,oBAElC,IAAImD,EAAeC,SAASC,SAASC,MAAM,KACvC3B,EAAkBwB,EAAaA,EAAalD,OAAS,GACrDgD,EAAQM,IAAI5B,KACZmB,EAASG,EAAQO,IAAI7B,GAAiBqB,IAE1CH,KAAKlB,gBAAkBA,CAC3B,CACA,MAAM8B,EAAiBZ,KAAKK,OAAOlD,QAAQ,4BAC3C,GAAIyD,EAAeF,IAAIT,GACnBD,KAAKtB,gBAAkBkC,EAAeD,IAAIV,OACvC,CACH,IAAIY,QAAeC,EAAAA,EAAAA,GAAuBb,GAC1CD,KAAKtB,gBAAkBmC,EAAOnD,KAAKqD,OAAOrC,gBAC1CsB,KAAKK,OAAO7C,SAAS,iCAAkC,CAAEwD,OAAQf,EAAQgB,cAAejB,KAAKtB,iBACjG,CACJ,CAAE,MAAOwC,GACLpB,EAAQoB,MAAMA,EAClB,CACJ,EACAxD,IAAAA,GACE,MAAO,CACLgB,gBAAiB,KACjBI,gBAAiB,GAErB,G,WC/CR,MAAMqC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O,oHCHOpE,eAAeO,IAClB,OAAO8D,EAAAA,EAAAA,GAAM,CACTC,KAAKC,EAAAA,EAAAA,IAAUC,EAAAA,EAAKC,WACpBC,OAAQ,OAEhB,CAEO1E,eAAe8D,EAAuBX,GACzC,OAAOkB,EAAAA,EAAAA,GAAM,CACTC,KAAKC,EAAAA,EAAAA,IAAUC,EAAAA,EAAKG,eACpBD,OAAQ,MACRE,OAAQ,CACJzB,GAAIA,IAGhB,C","sources":["webpack://neuvector-ui-ext-2.1.3/./utils/nodes.ts","webpack://neuvector-ui-ext-2.1.3/./components/Nodes/grids/NodeVulnerabilitiesGrid.vue","webpack://neuvector-ui-ext-2.1.3/./components/Nodes/grids/NodeVulnerabilitiesGrid.vue?bce5","webpack://neuvector-ui-ext-2.1.3/./plugins/nodes-class.js"],"sourcesContent":["import { getHosts } from '../plugins/nodes-class';\nimport { Store } from 'vuex';\nimport { cacheNvNamespace } from '../utils/common';\n\nexport async function cacheNodesInfo(store: Store<any>) {\n  if (store.getters['neuvector/hosts'].length === 0) {\n    await cacheNvNamespace(store);\n    let nodeRes = await getHosts();\n    store.dispatch('neuvector/updateHosts', preprocessNeuVectorHostsData(nodeRes.data.hosts));\n  }\n}\n\nfunction preprocessNeuVectorHostsData(hosts: any[]) {\n  let hostKV = new Map();\n  hosts.forEach(host => {\n    Object.values(host.interfaces).forEach((_interface: any) => {\n      _interface.forEach((interfaceDetail: any) => {\n          hostKV.set(interfaceDetail.ip, host);\n      });\n    });\n    hostKV.set(host.name, host);\n  });\n  return hostKV;\n}","<script>\n    import { getHostVulnerabilities } from '../../../plugins/nodes-class';\n    import { cacheNodesInfo } from '../../../utils/nodes';\n    import { Banner } from '@components/Banner';\n    import VulnerabilitiesGrid from '../../common/grids/VulnerabilitiesGrid';\n\n    export default {\n        components: {\n            Banner,\n            VulnerabilitiesGrid,\n        },\n        props: {\n            host: Object,\n            isLightTheme: Boolean,\n        },\n        async fetch(){\n            try {\n                console.log('Get host vulnerabilities...', this.host)\n                let hostId = '';\n                if (this.host) {\n                    hostId = this.host.nvId\n                    this.rancherHostName = this.host.id;\n                } else {\n                    let nvHosts = this.$store.getters['neuvector/hosts'];\n                    if (!nvHosts || nvHosts.length === 0) {\n                        await cacheNodesInfo(this.$store);\n                        nvHosts = this.$store.getters['neuvector/hosts'];\n                    }\n                    let pathSections = location.pathname.split('/');\n                    let rancherHostName = pathSections[pathSections.length - 1];\n                    if (nvHosts.has(rancherHostName)) {\n                        hostId = nvHosts.get(rancherHostName).id;\n                    }\n                    this.rancherHostName = rancherHostName\n                }\n                const scannedNodeMap = this.$store.getters['neuvector/scannedNodeMap'];\n                if (scannedNodeMap.has(hostId)) {\n                    this.vulnerabilities = scannedNodeMap.get(hostId);\n                } else {\n                    let vulRes = await getHostVulnerabilities(hostId);\n                    this.vulnerabilities = vulRes.data.report.vulnerabilities;\n                    this.$store.dispatch('neuvector/updateScannedNodeMap', { nodeID: hostId, scannedResult: this.vulnerabilities });\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        data() {\n          return {\n            vulnerabilities: null,\n            rancherHostName: '',\n          };\n        },\n    };\n</script>\n\n<template>\n    <div>\n        <VulnerabilitiesGrid v-if=\"vulnerabilities && vulnerabilities.length > 0\" :vulnerabilities=\"vulnerabilities\" :csvFileName=\"rancherHostName\"></VulnerabilitiesGrid>\n        <div v-else>\n          <Banner\n            class=\"type-banner mb-20 mt-0\"\n            color=\"warning\"\n            :label=\"t('general.NO_ROWS')\"\n          />\n        </div>\n    </div> \n</template>","import { render } from \"./NodeVulnerabilitiesGrid.vue?vue&type=template&id=778fda88\"\nimport script from \"./NodeVulnerabilitiesGrid.vue?vue&type=script&lang=js\"\nexport * from \"./NodeVulnerabilitiesGrid.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import axios from '../interceptor/http-interceptor';\nimport { getSSOUrl } from '../utils/common';\nimport { PATH } from '../types/path';\n\nexport async function getHosts() {\n    return axios({\n        url: getSSOUrl(PATH.NODES_URL),\n        method: 'get',\n    });\n};\n\nexport async function getHostVulnerabilities(id) {\n    return axios({\n        url: getSSOUrl(PATH.SCAN_HOST_URL),\n        method: 'get',\n        params: {\n            id: id\n        }\n    });\n};\n"],"names":["async","cacheNodesInfo","store","getters","length","cacheNvNamespace","nodeRes","getHosts","dispatch","preprocessNeuVectorHostsData","data","hosts","hostKV","Map","forEach","host","Object","values","interfaces","_interface","interfaceDetail","set","ip","name","_createElementBlock","$data","vulnerabilities","_createBlock","_component_VulnerabilitiesGrid","csvFileName","rancherHostName","_hoisted_1","_createVNode","_component_Banner","class","color","label","_ctx","t","components","Banner","VulnerabilitiesGrid","props","isLightTheme","Boolean","fetch","console","log","this","hostId","nvId","id","nvHosts","$store","pathSections","location","pathname","split","has","get","scannedNodeMap","vulRes","getHostVulnerabilities","report","nodeID","scannedResult","error","__exports__","render","axios","url","getSSOUrl","PATH","NODES_URL","method","SCAN_HOST_URL","params"],"sourceRoot":""}