"use strict";(("undefined"!==typeof self?self:this)["webpackChunkneuvector_ui_ext_2_1_3"]=("undefined"!==typeof self?self:this)["webpackChunkneuvector_ui_ext_2_1_3"]||[]).push([[820],{28571:function(e,t,n){n.d(t,{D:function(){return s},X:function(){return o}});var a=n(5945),r=n(18420),l=n(4364);async function o(e){await(0,r.wN)(e);let t=await(0,a.x)();e.dispatch("neuvector/updateWorkloads",i(t.data.workloads))}function i(e){let t=new Map;return t}async function s(e,t){await(0,r.wN)(t);let n=new Map;e.forEach((e=>{let t=e.status.containerStatuses&&e.status.containerStatuses[0]?.containerID||"",a=t.split("//")[1]||"";n.has(a)||n.set(e.id,a)})),l.log("rancherWorkloadMap",n),t.dispatch("neuvector/updateRancherWorkloadMap",n)}},79820:function(e,t,n){n.r(t),n.d(t,{default:function(){return v}});var a=n(9274);const r={key:1};function l(e,t,n,l,o,i){const s=(0,a.resolveComponent)("VulnerabilitiesGrid"),c=(0,a.resolveComponent)("Banner");return(0,a.openBlock)(),(0,a.createElementBlock)("div",null,[o.vulnerabilities&&o.vulnerabilities.length>0?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,vulnerabilities:o.vulnerabilities,csvFileName:o.rancherWorkloadName},null,8,["vulnerabilities","csvFileName"])):((0,a.openBlock)(),(0,a.createElementBlock)("div",r,[(0,a.createVNode)(c,{class:"type-banner mb-20 mt-0",color:"warning",label:e.t("general.NO_ROWS")},null,8,["label"])]))])}var o=n(28571),i=n(4850),s=n(9126),c=n(5945),u=n(4364),d={components:{Banner:i.l,VulnerabilitiesGrid:s.A},props:{workload:Object,isLightTheme:Boolean},async fetch(){try{u.log("Get workload vulnerabilities...");let e="";if(this.workload);else{let t=this.$store.getters["neuvector/rancherWorkloadMap"],n=location.pathname.split("/");if(!t||0===t.size){let e=this.$store.getters["cluster/all"](n[n.length-3]);await(0,o.D)(e,this.$store),t=this.$store.getters["neuvector/rancherWorkloadMap"]}let a=`${n[n.length-2]}/${n[n.length-1]}`;u.log(t,a),t.has(a)&&(u.log(a),e=t.get(a)),this.rancherWorkloadName=a}const t=this.$store.getters["neuvector/scannedWorkloadMap"];if(t.has(e))this.vulnerabilities=t.get(e);else{let t=await(0,c.m)(e);this.vulnerabilities=t.data.report.vulnerabilities,this.$store.dispatch("neuvector/updateScannedWorkloadMap",{workloadID:e,scannedResult:this.vulnerabilities})}}catch(e){u.error(e)}},data(){return{vulnerabilities:null,rancherWorkloadName:""}}},h=n(47433);const p=(0,h.A)(d,[["render",l]]);var v=p},5945:function(e,t,n){n.d(t,{m:function(){return i},x:function(){return o}});var a=n(70344),r=n(18420),l=n(65462);async function o(){return(0,a.A)({url:(0,r.hT)(l.g.SCANNED_CONTAINER_URL),method:"get"})}async function i(e){return(0,a.A)({url:(0,r.hT)(l.g.SCAN_URL),method:"get",params:{id:e}})}}}]);
//# sourceMappingURL=neuvector-ui-ext-2.1.3.umd.min.820.js.map